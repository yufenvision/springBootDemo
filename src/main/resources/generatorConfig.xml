<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<!-- 配置生成器 -->
<generatorConfiguration>

<!--    <classPathEntry location="D:\apache-maven-3.6.3\maven_repository\mysql\mysql-connector-java\5.1.46\mysql-connector-java-5.1.46.jar" />-->

    <context id="simple"  targetRuntime="MyBatis3">

        <!-- 数据库连接信息 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://10.62.108.86:3306/commercial?useUnicode=true&amp;useSSL=false&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC" userId="devmysql" password="1qaz@WSX">
        </jdbcConnection>

        <!-- java类型处理器 用于处理数据库中的类型到Java中的类型，
             默认使用JavaTypeResolverDefaultImpl；
             注意一点，默认会先尝试使用Integer，Long，Short等来对应DECIMAL和
            NUMERIC数据类型； -->
        <javaTypeResolver type="org.mybatis.generator.internal.types.JavaTypeResolverDefaultImpl">
            <!-- true：使用BigDecimal对应DECIMAL和 NUMERIC数据类型 f
                 alse：默认, scale>0;length>18：使用BigDecimal;
                scale=0;length[10,18]：使用Long； scale=0;length[5,9]：
                使用Integer； scale=0;length<5：使用Short； -->
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <javaModelGenerator targetPackage="com.yuf.demo.entity" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
            <!-- for MyBatis3 / MyBatis3Simple
            是否创建一个不可变的类，如果为true，
            那么MBG会创建一个没有setter方法的类，
            取而代之的是类似constructorBased的类 -->
            <property name="enableSubPackages" value="true" />
            <!-- 设置是否在getter方法中，
            对String类型字段调用trim()方法 -->
            <property name="trimStrings" value="true" />
        </javaModelGenerator>

        <!--
            配置mapper.xml的生成策略
            targetPackage:把自动生成的mapper放在哪个工程里面
            targetProject:哪个包下
        -->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
            <!-- 在targetPackage的基础上，
            根据数据库的schema再生成一层package，
            最终生成的类放在这个package下，默认为false -->
            <property name="enableSubPackages" value="true" />
        </sqlMapGenerator>

        <!--
           mapper接口生成策略
        -->
        <javaClientGenerator targetPackage="com.yuf.demo.mapper" type="XMLMAPPER" targetProject="src/main/java">
            <property name="enableSubPackages" value="true" />
        </javaClientGenerator>

        <!--建立与数据库中哪张表的关系映射-->
        <table tableName="area" domainObjectName="Area"
               enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
        </table>

    </context>
</generatorConfiguration>